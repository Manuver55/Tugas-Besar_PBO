package tiket.wisata;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

public class Home extends javax.swing.JFrame{
    Connection con = null;
    Statement st = null;
    public String id_tiket = "";
    String jenis;
    Font fontBlack, fontDefault;
    DefaultTableModel model;
    String kode;
    
    String userLogin;
       
    /**
     * Creates new form Home
     */   
    
    public Home() {
        
    }
    
    /**
     *
     * @param userLogin
     */
    public Home(String userLogin) {
        try {
            this.fontBlack = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/Font/Montserrat_Black.ttf"));
            this.fontDefault = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/Font/Montserrat.ttf"));
        } catch (FontFormatException | IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();  
        this.userLogin = userLogin;
        System.out.println(this.userLogin);
        setLocationRelativeTo(null);
        MySQLConnection DB = new MySQLConnection();
        DB.config();
        
        con = DB.con;
        st = DB.stm;
       
        // mengeset tampilan awal layout ketika dijalankan
        // tampilan beranda pertama di visible 
        // layout yang lainnya di disable
        panelBeranda.setVisible(true);
        panelPesanTiket.setVisible(false);
        panelRiwayat.setVisible(false);
        panelPengaturan.setVisible(false);
        panelFeedback.setVisible(false);
        // mengeset color warna bahwa layout beranda di select
        setColor(layoutBeranda);
        // membuat tanggal tidak bisa memilih tanggal sebelumnya
        datePicker.getJCalendar().setMinSelectableDate(new java.util.Date());
        
        model = new DefaultTableModel();
        this.tabelHistory.setModel(model);
        model.addColumn("Kode Tiket");
        model.addColumn("Tanggal Penyewaan");
        model.addColumn("Jenis Wisata");
        model.addColumn("Lokasi Wisata");
        model.addColumn("Jumlah Tiket");
        model.addColumn("Total Pembayaran");
        model.addColumn("Status Pembayaran");
        idTiket();
        
        Calendar c = Calendar.getInstance();
        int timeOfDay = c.get(Calendar.HOUR_OF_DAY);
        String greeting;
        
        if (timeOfDay >= 0 && timeOfDay < 12) {
            labelGreeting.setText("Ohayou gozaimasu, " + userLogin);
        } else if (timeOfDay >= 12 && timeOfDay < 16) {
            labelGreeting.setText("Konnichiwa, " + userLogin);
        } else if (timeOfDay >= 16 && timeOfDay < 21) {
            labelGreeting.setText("Konbawa, " + userLogin);
        } else if (timeOfDay >= 21 && timeOfDay < 24) {
            labelGreeting.setText("Konbawa, " + userLogin);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        backgroundLayout = new javax.swing.JPanel();
        leftLayout = new javax.swing.JPanel();
        layoutBeranda = new javax.swing.JPanel();
        leftBgWhiteBeranda = new javax.swing.JPanel();
        titleBeranda = new javax.swing.JLabel();
        layoutPesanTiket = new javax.swing.JPanel();
        leftBgWhitePesanTiket = new javax.swing.JPanel();
        titlePesanTiket = new javax.swing.JLabel();
        layoutRiwayat = new javax.swing.JPanel();
        leftBgWhiteRiwayat = new javax.swing.JPanel();
        titleRiwayat = new javax.swing.JLabel();
        layoutPengaturan = new javax.swing.JPanel();
        bgWhitePengaturan = new javax.swing.JPanel();
        titlePengaturan = new javax.swing.JLabel();
        layoutFeedback = new javax.swing.JPanel();
        bgWhiteFeedback = new javax.swing.JPanel();
        titleFeedback = new javax.swing.JLabel();
        layoutKeluar = new javax.swing.JPanel();
        bgWhiteKeluar = new javax.swing.JPanel();
        titleKeluar = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        subTitle = new javax.swing.JLabel();
        contentLayout = new javax.swing.JPanel();
        panelBeranda = new javax.swing.JPanel();
        labelGreeting = new javax.swing.JLabel();
        labelWelcome = new javax.swing.JLabel();
        labelDesc = new javax.swing.JLabel();
        panelPesanTiket = new javax.swing.JPanel();
        title1 = new javax.swing.JLabel();
        labelTglPenyewaan = new javax.swing.JLabel();
        datePicker = new com.toedter.calendar.JDateChooser();
        labelJmlhTIket = new javax.swing.JLabel();
        textFieldJmlhTiket = new javax.swing.JTextField();
        labelJenisTiket = new javax.swing.JLabel();
        cbJenisTiket = new javax.swing.JComboBox<>();
        labelHrgTiket = new javax.swing.JLabel();
        textFieldHrgTiket = new javax.swing.JTextField();
        labelLokasiWisata = new javax.swing.JLabel();
        cbLokasiWisata = new javax.swing.JComboBox<>();
        labelPembayaran = new javax.swing.JLabel();
        cbPembayaran = new javax.swing.JComboBox<>();
        labelTtlPembayaran = new javax.swing.JLabel();
        textFieldTtlPembayaran = new javax.swing.JTextField();
        btnBersih = new javax.swing.JButton();
        btnBeli = new javax.swing.JButton();
        panelRiwayat = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelHistory = new javax.swing.JTable();
        labelHistory = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        btnBayar = new javax.swing.JButton();
        panelPengaturan = new javax.swing.JPanel();
        labelPengaturan = new javax.swing.JLabel();
        labelFullNamePengaturan = new javax.swing.JLabel();
        textFieldFullNamePengaturan = new javax.swing.JTextField();
        labelTglLahir = new javax.swing.JLabel();
        datePickerTglLahir = new com.toedter.calendar.JDateChooser();
        labelJenisKelamin = new javax.swing.JLabel();
        rbLaki = new javax.swing.JRadioButton();
        rbPerempuan = new javax.swing.JRadioButton();
        labelNoTelp = new javax.swing.JLabel();
        textFieldNoTelp = new javax.swing.JTextField();
        btnSimpanPengaturan = new javax.swing.JButton();
        btnEditPengaturan = new javax.swing.JButton();
        panelFeedback = new javax.swing.JPanel();
        labelFeedback = new javax.swing.JLabel();
        labelFullNameFeedback = new javax.swing.JLabel();
        textFieldFullNameFeedback = new javax.swing.JTextField();
        labelKritikSaran = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaKritikSaran = new javax.swing.JTextArea();
        btnAddSaveFeedback = new javax.swing.JButton();
        btnEditFeedback = new javax.swing.JButton();
        btnHapusFeedback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        leftLayout.setBackground(new java.awt.Color(54, 79, 107));

        layoutBeranda.setBackground(new java.awt.Color(7, 39, 64));
        layoutBeranda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutBerandaMousePressed(evt);
            }
        });
        layoutBeranda.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftBgWhiteBeranda.setOpaque(false);

        javax.swing.GroupLayout leftBgWhiteBerandaLayout = new javax.swing.GroupLayout(leftBgWhiteBeranda);
        leftBgWhiteBeranda.setLayout(leftBgWhiteBerandaLayout);
        leftBgWhiteBerandaLayout.setHorizontalGroup(
            leftBgWhiteBerandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        leftBgWhiteBerandaLayout.setVerticalGroup(
            leftBgWhiteBerandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutBeranda.add(leftBgWhiteBeranda, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titleBeranda.setFont(fontDefault.deriveFont(14f));
        titleBeranda.setForeground(new java.awt.Color(255, 255, 255));
        titleBeranda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleBeranda.setText("Beranda");
        layoutBeranda.add(titleBeranda, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 90, 40));

        layoutPesanTiket.setBackground(new java.awt.Color(7, 39, 64));
        layoutPesanTiket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutPesanTiketMousePressed(evt);
            }
        });
        layoutPesanTiket.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftBgWhitePesanTiket.setOpaque(false);

        javax.swing.GroupLayout leftBgWhitePesanTiketLayout = new javax.swing.GroupLayout(leftBgWhitePesanTiket);
        leftBgWhitePesanTiket.setLayout(leftBgWhitePesanTiketLayout);
        leftBgWhitePesanTiketLayout.setHorizontalGroup(
            leftBgWhitePesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        leftBgWhitePesanTiketLayout.setVerticalGroup(
            leftBgWhitePesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutPesanTiket.add(leftBgWhitePesanTiket, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titlePesanTiket.setFont(fontDefault.deriveFont(14f));
        titlePesanTiket.setForeground(new java.awt.Color(255, 255, 255));
        titlePesanTiket.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlePesanTiket.setText("Pesan Tiket");
        layoutPesanTiket.add(titlePesanTiket, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 90, 40));

        layoutRiwayat.setBackground(new java.awt.Color(7, 39, 64));
        layoutRiwayat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutRiwayatMousePressed(evt);
            }
        });
        layoutRiwayat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftBgWhiteRiwayat.setOpaque(false);

        javax.swing.GroupLayout leftBgWhiteRiwayatLayout = new javax.swing.GroupLayout(leftBgWhiteRiwayat);
        leftBgWhiteRiwayat.setLayout(leftBgWhiteRiwayatLayout);
        leftBgWhiteRiwayatLayout.setHorizontalGroup(
            leftBgWhiteRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        leftBgWhiteRiwayatLayout.setVerticalGroup(
            leftBgWhiteRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutRiwayat.add(leftBgWhiteRiwayat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titleRiwayat.setFont(fontDefault.deriveFont(14f));
        titleRiwayat.setForeground(new java.awt.Color(255, 255, 255));
        titleRiwayat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleRiwayat.setText("Riwayat Pesanan");
        layoutRiwayat.add(titleRiwayat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 200, 40));

        layoutPengaturan.setBackground(new java.awt.Color(7, 39, 64));
        layoutPengaturan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutPengaturanMousePressed(evt);
            }
        });
        layoutPengaturan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgWhitePengaturan.setOpaque(false);

        javax.swing.GroupLayout bgWhitePengaturanLayout = new javax.swing.GroupLayout(bgWhitePengaturan);
        bgWhitePengaturan.setLayout(bgWhitePengaturanLayout);
        bgWhitePengaturanLayout.setHorizontalGroup(
            bgWhitePengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        bgWhitePengaturanLayout.setVerticalGroup(
            bgWhitePengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutPengaturan.add(bgWhitePengaturan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titlePengaturan.setFont(fontDefault.deriveFont(14f));
        titlePengaturan.setForeground(new java.awt.Color(255, 255, 255));
        titlePengaturan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlePengaturan.setText("Pengaturan");
        layoutPengaturan.add(titlePengaturan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 90, 40));

        layoutFeedback.setBackground(new java.awt.Color(7, 39, 64));
        layoutFeedback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutFeedbackMousePressed(evt);
            }
        });
        layoutFeedback.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgWhiteFeedback.setOpaque(false);

        javax.swing.GroupLayout bgWhiteFeedbackLayout = new javax.swing.GroupLayout(bgWhiteFeedback);
        bgWhiteFeedback.setLayout(bgWhiteFeedbackLayout);
        bgWhiteFeedbackLayout.setHorizontalGroup(
            bgWhiteFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        bgWhiteFeedbackLayout.setVerticalGroup(
            bgWhiteFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutFeedback.add(bgWhiteFeedback, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titleFeedback.setFont(fontDefault.deriveFont(14f));
        titleFeedback.setForeground(new java.awt.Color(255, 255, 255));
        titleFeedback.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleFeedback.setText("Feedback");
        layoutFeedback.add(titleFeedback, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 90, 40));

        layoutKeluar.setBackground(new java.awt.Color(7, 39, 64));
        layoutKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                layoutKeluarMousePressed(evt);
            }
        });
        layoutKeluar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgWhiteKeluar.setOpaque(false);

        javax.swing.GroupLayout bgWhiteKeluarLayout = new javax.swing.GroupLayout(bgWhiteKeluar);
        bgWhiteKeluar.setLayout(bgWhiteKeluarLayout);
        bgWhiteKeluarLayout.setHorizontalGroup(
            bgWhiteKeluarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        bgWhiteKeluarLayout.setVerticalGroup(
            bgWhiteKeluarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        layoutKeluar.add(bgWhiteKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 10, 40));

        titleKeluar.setFont(fontDefault.deriveFont(14f));
        titleKeluar.setForeground(new java.awt.Color(255, 255, 255));
        titleKeluar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleKeluar.setText("Keluar");
        layoutKeluar.add(titleKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 90, 40));

        title.setFont(fontBlack.deriveFont(32f));
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("MadeTick");

        subTitle.setFont(fontDefault.deriveFont(14f));
        subTitle.setForeground(new java.awt.Color(204, 204, 204));
        subTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subTitle.setText("Manji Destination Ticket");

        javax.swing.GroupLayout leftLayoutLayout = new javax.swing.GroupLayout(leftLayout);
        leftLayout.setLayout(leftLayoutLayout);
        leftLayoutLayout.setHorizontalGroup(
            leftLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layoutBeranda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layoutPesanTiket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layoutPengaturan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layoutKeluar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layoutFeedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(layoutRiwayat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(subTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(leftLayoutLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        leftLayoutLayout.setVerticalGroup(
            leftLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayoutLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(layoutBeranda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layoutPesanTiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layoutRiwayat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layoutPengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layoutFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layoutKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBeranda.setBackground(new java.awt.Color(245, 245, 245));

        labelGreeting.setFont(fontDefault.deriveFont(14f));
        labelGreeting.setText("Lorem ipsum");

        labelWelcome.setFont(fontBlack.deriveFont(24f));
        labelWelcome.setForeground(new java.awt.Color(63, 193, 201));
        labelWelcome.setText("Selamat Datang di MadeTick");

        labelDesc.setFont(fontDefault.deriveFont(14f));
        labelDesc.setText("Tempat penjualan tiket wisata bali");

        javax.swing.GroupLayout panelBerandaLayout = new javax.swing.GroupLayout(panelBeranda);
        panelBeranda.setLayout(panelBerandaLayout);
        panelBerandaLayout.setHorizontalGroup(
            panelBerandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBerandaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelBerandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDesc)
                    .addComponent(labelWelcome)
                    .addComponent(labelGreeting))
                .addContainerGap(367, Short.MAX_VALUE))
        );
        panelBerandaLayout.setVerticalGroup(
            panelBerandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBerandaLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(labelGreeting)
                .addGap(38, 38, 38)
                .addComponent(labelWelcome)
                .addGap(18, 18, 18)
                .addComponent(labelDesc)
                .addContainerGap(390, Short.MAX_VALUE))
        );

        panelPesanTiket.setBackground(new java.awt.Color(245, 245, 245));

        title1.setFont(fontBlack.deriveFont(24f));
        title1.setForeground(new java.awt.Color(63, 193, 201));
        title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title1.setText("Pemesanan Tiket");

        labelTglPenyewaan.setFont(fontDefault.deriveFont(14f));
        labelTglPenyewaan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTglPenyewaan.setText("Tanggal Penyewaan");

        datePicker.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        labelJmlhTIket.setFont(fontDefault.deriveFont(14f));
        labelJmlhTIket.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelJmlhTIket.setText("Jumlah tiket ");

        textFieldJmlhTiket.setFont(fontDefault.deriveFont(14f));
        textFieldJmlhTiket.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textFieldJmlhTiket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldJmlhTiketKeyTyped(evt);
            }
        });

        labelJenisTiket.setFont(fontDefault.deriveFont(14f));
        labelJenisTiket.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelJenisTiket.setText("Jenis tiket");

        cbJenisTiket.setFont(fontDefault.deriveFont(14f));
        cbJenisTiket.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Tiket", "Wisata Alam", "Wisata Religi", "Wisata Pendidikan" }));
        cbJenisTiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbJenisTiketActionPerformed(evt);
            }
        });

        labelHrgTiket.setFont(fontDefault.deriveFont(14f));
        labelHrgTiket.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelHrgTiket.setText("Harga tiket");

        textFieldHrgTiket.setFont(fontDefault.deriveFont(14f));
        textFieldHrgTiket.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        labelLokasiWisata.setFont(fontDefault.deriveFont(14f));
        labelLokasiWisata.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelLokasiWisata.setText("Lokasi wisata");

        cbLokasiWisata.setFont(fontDefault.deriveFont(14f));

        labelPembayaran.setFont(fontDefault.deriveFont(14f));
        labelPembayaran.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelPembayaran.setText("Pembayaran Via");

        cbPembayaran.setFont(fontDefault.deriveFont(14f));
        cbPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Pembayaran", "Bank BRI", "Bank BCA", "Bank BNI", "Bank Mandiri", "Bank BTN", "Gopay", "OVO", "LinkAja", "Alfamart", "Indomaret" }));

        labelTtlPembayaran.setFont(fontDefault.deriveFont(14f));
        labelTtlPembayaran.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTtlPembayaran.setText("Total pembayaran");

        textFieldTtlPembayaran.setFont(fontDefault.deriveFont(14f));
        textFieldTtlPembayaran.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        btnBersih.setFont(fontDefault.deriveFont(12f));
        btnBersih.setText("Bersihkan");
        btnBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihActionPerformed(evt);
            }
        });

        btnBeli.setBackground(new java.awt.Color(63, 193, 201));
        btnBeli.setFont(fontDefault.deriveFont(12f));
        btnBeli.setText("Beli Sekarang");
        btnBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPesanTiketLayout = new javax.swing.GroupLayout(panelPesanTiket);
        panelPesanTiket.setLayout(panelPesanTiketLayout);
        panelPesanTiketLayout.setHorizontalGroup(
            panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesanTiketLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPesanTiketLayout.createSequentialGroup()
                        .addComponent(title1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelPesanTiketLayout.createSequentialGroup()
                        .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(labelLokasiWisata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelPembayaran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelHrgTiket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelJenisTiket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelJmlhTIket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelTglPenyewaan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addComponent(btnBersih, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(labelTtlPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbLokasiWisata, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbPembayaran, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)
                            .addComponent(textFieldHrgTiket, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldJmlhTiket, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBeli, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldTtlPembayaran, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbJenisTiket, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(datePicker, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addGap(123, 123, 123))))
        );
        panelPesanTiketLayout.setVerticalGroup(
            panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesanTiketLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(title1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelTglPenyewaan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelJmlhTIket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldJmlhTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbJenisTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJenisTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLokasiWisata, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbLokasiWisata, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHrgTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldHrgTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldTtlPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTtlPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelPesanTiketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBersih, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        panelRiwayat.setBackground(new java.awt.Color(245, 245, 245));

        tabelHistory.setFont(fontDefault.deriveFont(12f));
        tabelHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelHistoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelHistory);

        labelHistory.setFont(fontBlack.deriveFont(24f));
        labelHistory.setForeground(new java.awt.Color(63, 193, 201));
        labelHistory.setText("Riwayat Pemesanan Tiket");

        btnHapus.setFont(fontDefault.deriveFont(12f));
        btnHapus.setText("Hapus riwayat");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBayar.setBackground(new java.awt.Color(63, 193, 201));
        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRiwayatLayout = new javax.swing.GroupLayout(panelRiwayat);
        panelRiwayat.setLayout(panelRiwayatLayout);
        panelRiwayatLayout.setHorizontalGroup(
            panelRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRiwayatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                    .addGroup(panelRiwayatLayout.createSequentialGroup()
                        .addGroup(panelRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelHistory)
                            .addGroup(panelRiwayatLayout.createSequentialGroup()
                                .addComponent(btnHapus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelRiwayatLayout.setVerticalGroup(
            panelRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRiwayatLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(labelHistory)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(panelRiwayatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBayar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        panelPengaturan.setBackground(new java.awt.Color(245, 245, 245));

        labelPengaturan.setFont(fontBlack.deriveFont(24f));
        labelPengaturan.setForeground(new java.awt.Color(63, 193, 201));
        labelPengaturan.setText("Akun saya");

        labelFullNamePengaturan.setFont(fontDefault.deriveFont(14f));
        labelFullNamePengaturan.setText("Nama lengkap");

        textFieldFullNamePengaturan.setFont(fontDefault.deriveFont(14f));
        textFieldFullNamePengaturan.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textFieldFullNamePengaturan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFullNamePengaturanActionPerformed(evt);
            }
        });

        labelTglLahir.setFont(fontDefault.deriveFont(14f));
        labelTglLahir.setText("Tanggal lahir");

        datePickerTglLahir.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N

        labelJenisKelamin.setFont(fontDefault.deriveFont(14f));
        labelJenisKelamin.setText("Jenis kelamin");

        buttonGroup1.add(rbLaki);
        rbLaki.setFont(fontDefault.deriveFont(12f));
        rbLaki.setText("Laki-laki");

        buttonGroup1.add(rbPerempuan);
        rbPerempuan.setFont(fontDefault.deriveFont(12f));
        rbPerempuan.setText("Perempuan");

        labelNoTelp.setFont(fontDefault.deriveFont(14f));
        labelNoTelp.setText("Nomor Telepon");

        textFieldNoTelp.setFont(fontDefault.deriveFont(14f));
        textFieldNoTelp.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textFieldNoTelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNoTelpActionPerformed(evt);
            }
        });
        textFieldNoTelp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldNoTelpKeyTyped(evt);
            }
        });

        btnSimpanPengaturan.setBackground(new java.awt.Color(63, 193, 201));
        btnSimpanPengaturan.setFont(fontDefault.deriveFont(12f));
        btnSimpanPengaturan.setText("Simpan");
        btnSimpanPengaturan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanPengaturanActionPerformed(evt);
            }
        });

        btnEditPengaturan.setFont(fontDefault.deriveFont(12f));
        btnEditPengaturan.setText("Edit");
        btnEditPengaturan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPengaturanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPengaturanLayout = new javax.swing.GroupLayout(panelPengaturan);
        panelPengaturan.setLayout(panelPengaturanLayout);
        panelPengaturanLayout.setHorizontalGroup(
            panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPengaturanLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPengaturan)
                    .addGroup(panelPengaturanLayout.createSequentialGroup()
                        .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFullNamePengaturan)
                            .addComponent(labelTglLahir)
                            .addComponent(labelJenisKelamin)
                            .addComponent(labelNoTelp)
                            .addComponent(btnEditPengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSimpanPengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldFullNamePengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textFieldNoTelp, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panelPengaturanLayout.createSequentialGroup()
                                    .addComponent(rbLaki)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rbPerempuan))
                                .addComponent(datePickerTglLahir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        panelPengaturanLayout.setVerticalGroup(
            panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPengaturanLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(labelPengaturan)
                .addGap(34, 34, 34)
                .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datePickerTglLahir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPengaturanLayout.createSequentialGroup()
                        .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFullNamePengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldFullNamePengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(labelTglLahir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelJenisKelamin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbLaki)
                    .addComponent(rbPerempuan))
                .addGap(18, 18, 18)
                .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(panelPengaturanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpanPengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditPengaturan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        panelFeedback.setBackground(new java.awt.Color(245, 245, 245));

        labelFeedback.setFont(fontBlack.deriveFont(24f));
        labelFeedback.setForeground(new java.awt.Color(63, 193, 201));
        labelFeedback.setText("Feedback");

        labelFullNameFeedback.setFont(fontDefault.deriveFont(14f));
        labelFullNameFeedback.setText("Nama lengkap");

        textFieldFullNameFeedback.setFont(fontDefault.deriveFont(14f));
        textFieldFullNameFeedback.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        textFieldFullNameFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFullNameFeedbackActionPerformed(evt);
            }
        });

        labelKritikSaran.setFont(fontDefault.deriveFont(14f));
        labelKritikSaran.setText("Kritik dan saran");

        textAreaKritikSaran.setColumns(20);
        textAreaKritikSaran.setFont(fontDefault.deriveFont(14f));
        textAreaKritikSaran.setRows(5);
        jScrollPane2.setViewportView(textAreaKritikSaran);

        btnAddSaveFeedback.setBackground(new java.awt.Color(63, 193, 201));
        btnAddSaveFeedback.setFont(fontDefault.deriveFont(12f));
        btnAddSaveFeedback.setText("Simpan");
        btnAddSaveFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSaveFeedbackActionPerformed(evt);
            }
        });

        btnEditFeedback.setFont(fontDefault.deriveFont(12f));
        btnEditFeedback.setText("Edit");
        btnEditFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditFeedbackActionPerformed(evt);
            }
        });

        btnHapusFeedback.setFont(fontDefault.deriveFont(12f));
        btnHapusFeedback.setText("Hapus");
        btnHapusFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusFeedbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFeedbackLayout = new javax.swing.GroupLayout(panelFeedback);
        panelFeedback.setLayout(panelFeedbackLayout);
        panelFeedbackLayout.setHorizontalGroup(
            panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFeedbackLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFeedback)
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFullNameFeedback)
                            .addComponent(labelKritikSaran))
                        .addGap(26, 26, 26)
                        .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldFullNameFeedback)
                            .addComponent(jScrollPane2)))
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addComponent(btnEditFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapusFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddSaveFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        panelFeedbackLayout.setVerticalGroup(
            panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFeedbackLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(labelFeedback)
                .addGap(50, 50, 50)
                .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFullNameFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldFullNameFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelKritikSaran, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapusFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddSaveFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(178, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout contentLayoutLayout = new javax.swing.GroupLayout(contentLayout);
        contentLayout.setLayout(contentLayoutLayout);
        contentLayoutLayout.setHorizontalGroup(
            contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelBeranda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPesanTiket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelRiwayat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPengaturan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentLayoutLayout.setVerticalGroup(
            contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelBeranda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPesanTiket, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelRiwayat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPengaturan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelFeedback, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout backgroundLayoutLayout = new javax.swing.GroupLayout(backgroundLayout);
        backgroundLayout.setLayout(backgroundLayoutLayout);
        backgroundLayoutLayout.setHorizontalGroup(
            backgroundLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayoutLayout.createSequentialGroup()
                .addComponent(leftLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundLayoutLayout.setVerticalGroup(
            backgroundLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String idTiket(){
          try{
            String sql = "SELECT * FROM tbtiket ORDER BY id_tiket DESC";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            if(rs.next()){
                String kode = rs.getString("id_tiket").substring(2);
                String AN = "" + (Integer.parseInt(kode) + 1);
                String Nol = "";
                
                if(AN.length()==1){
                    Nol = "00";
                }else if(AN.length()==2){
                    Nol = "0";
                }else if(AN.length()==3){
                    Nol = "";
                }
                
                id_tiket = "MT" + Nol + AN;
            } else{
                id_tiket = "MT001";
            }
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Terjadi Kesalahan " + ex);
        }
        return String.format(id_tiket);
    }
    
    private void clearScreen() {
        datePicker.setDate(null);
        textFieldJmlhTiket.setText("");
        cbJenisTiket.setSelectedIndex(0);
        cbLokasiWisata.removeAllItems();
        textFieldHrgTiket.setText("");
        cbPembayaran.setSelectedIndex(0);
        textFieldTtlPembayaran.setText("");
    }
    
    void setColor(JPanel panel) {
        panel.setBackground(new Color(99, 123, 153));
    }
    void resetColor(JPanel panel) {
        panel.setBackground(new Color(7,39,64));
    }  
    
    public void tampilWisata(String jenis){
        try{            
            String sql = "SELECT * FROM tbwisata WHERE jenisWisata = '" + jenis + "'";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                cbLokasiWisata.addItem(rs.getString("namaWisata"));
            }
            rs.last();
            int jumlahData = rs.getRow();
            rs.first();
        }catch(Exception e){}
    }
    
    public void tampilHarga(String jenis){
        try{            
            String sql = "SELECT * FROM tbwisata WHERE jenisWisata = '" + jenis + "'";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                textFieldHrgTiket.setText(rs.getString("harga"));
            }
            rs.last();
            int jumlahData = rs.getRow();
            rs.first();
        }catch(Exception e){}
    }
    
    public void getDataRiwayat() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            String sql = "SELECT * FROM tbtiket where username ='"+userLogin+"'";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                Object[] o = new Object[7];
                o[0]=rs.getString("id_tiket");
                o[1]=rs.getString("tanggal_tiket");
                o[2]=rs.getString("jenis_tiket");
                o[3]=rs.getString("lokasi_tiket");
                o[4]=rs.getString("jumlah_tiket");
                o[5]=rs.getString("total_harga");
                o[6]=rs.getString("status_pembayaran");
                model.addRow(o);
            }
            rs.close();
            stmt.close();
            ambiltiketKlik();
        }catch(SQLException e) {
            System.out.println("Terjadi kesalahan "+e.getMessage());
        }
    }
        
    public void tampilPengaturan(){
        this.btnEditPengaturan.setEnabled(false);
        try{            
            String sql = "SELECT * FROM tbpengaturan WHERE username = '" + userLogin + "'";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                String jk = rs.getString("Jenis_Kelamin");
                
                
            if (rs.getString("Nama_Lengkap") == "NULL" && rs.getString("Nama_Lengkap") == ""){
                textFieldFullNamePengaturan.setText("");
                datePickerTglLahir.setDate(null);
                buttonGroup1.clearSelection();
                textFieldNoTelp.setText("");
                
                this.btnEditPengaturan.setEnabled(false);
            }else {
                Date ys = new Date();
                datePickerTglLahir.setDate(ys);
                ys = rs.getDate("Tanggal_Lahir");
                datePickerTglLahir.setDateFormatString("MMM d, y");
                
                textFieldFullNamePengaturan.setText(rs.getString("Nama_Lengkap"));
                datePickerTglLahir.setDate(ys);
                if (jk.equals("Laki-laki")){
                    this.rbLaki.setSelected(true);
                } else if (jk.equals("Perempuan")){
                    this.rbPerempuan.setSelected(true);
                }
                textFieldNoTelp.setText(rs.getString("Nomor_Telepon"));
                
                this.textFieldFullNamePengaturan.setEnabled(false);
                this.datePickerTglLahir.setEnabled(false);
                this.rbLaki.setEnabled(false);
                this.rbPerempuan.setEnabled(false);
                this.textFieldNoTelp.setEnabled(false);
                this.btnEditPengaturan.setEnabled(true);
                this.btnSimpanPengaturan.setEnabled(false);
            }
            }
            
            rs.close();
            stmt.close();
        }catch(SQLException e){
            System.out.println("Terjadi kesalahan " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Terjadi Kesalahan " + e);
        }
    }
    
    public void tampilFeedback(){
        this.btnEditFeedback.setEnabled(false);
        this.btnHapusFeedback.setEnabled(false);
        try{            
            String sql = "SELECT * FROM tbfeedback WHERE username = '" + userLogin + "'";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                
            if (rs.getString("Nama_Lengkap") == "NULL" && rs.getString("Nama_Lengkap") == ""){
                textFieldFullNameFeedback.setText("");
                textAreaKritikSaran.setText("");
                
                this.btnEditFeedback.setEnabled(false);
                this.btnHapusFeedback.setEnabled(false);
            }else {  
                textFieldFullNameFeedback.setText(rs.getString("Nama_Lengkap"));
                textAreaKritikSaran.setText(rs.getString("Kritik_Saran"));
                
                this.textFieldFullNameFeedback.setEnabled(false);
                this.textAreaKritikSaran.setEnabled(false);
                this.btnEditFeedback.setEnabled(true);
                this.btnHapusFeedback.setEnabled(true);
                this.btnAddSaveFeedback.setEnabled(false);
            }
            }
            
            rs.close();
            stmt.close();
        }catch(SQLException e){
            System.out.println("Terjadi kesalahan " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Terjadi Kesalahan " + e);
        }
    }
    
    private void ambiltiketKlik(){
        int i = this.tabelHistory.getSelectedRow();
        if(i == -1){
            return;
        }
        
        kode = (String) model.getValueAt(i, 0);
        String tgl = (String) model.getValueAt(i, 1);
        String jenis = (String) model.getValueAt(i, 2);
        String lok = (String) model.getValueAt(i, 3);
        String jmlh = (String) model.getValueAt(i, 4);
        String ttl = (String) model.getValueAt(i, 5);
        String status = (String) model.getValueAt(i, 6);
        if ("Belum bayar".equals(status)) {
            btnBayar.setEnabled(true);
        } else {
            btnBayar.setEnabled(false);
        }     
    }
    
    private void layoutBerandaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutBerandaMousePressed
        setColor(layoutBeranda);
        resetColor(layoutPesanTiket);
        resetColor(layoutRiwayat);
        resetColor(layoutPengaturan);
        resetColor(layoutFeedback);
        resetColor(layoutKeluar);
        
        panelBeranda.setVisible(true);
        panelPesanTiket.setVisible(false);
        panelRiwayat.setVisible(false);
        panelPengaturan.setVisible(false);
        panelFeedback.setVisible(false);
    }//GEN-LAST:event_layoutBerandaMousePressed
    
    private void layoutPesanTiketMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutPesanTiketMousePressed
        setColor(layoutPesanTiket);
        resetColor(layoutBeranda);
        resetColor(layoutRiwayat);
        resetColor(layoutPengaturan);
        resetColor(layoutFeedback);
        resetColor(layoutKeluar);
        
        panelBeranda.setVisible(false);
        panelPesanTiket.setVisible(true);
        panelRiwayat.setVisible(false);
        panelPengaturan.setVisible(false);
        panelFeedback.setVisible(false);
    }//GEN-LAST:event_layoutPesanTiketMousePressed

    private void layoutRiwayatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutRiwayatMousePressed
        setColor(layoutRiwayat);
        resetColor(layoutBeranda);
        resetColor(layoutPesanTiket);
        resetColor(layoutPengaturan);
        resetColor(layoutFeedback);
        resetColor(layoutKeluar);
        
        panelBeranda.setVisible(false);
        panelPesanTiket.setVisible(false);
        panelRiwayat.setVisible(true);
        panelPengaturan.setVisible(false);
        panelFeedback.setVisible(false);
        this.btnBayar.setEnabled(false);
        
        getDataRiwayat();
    }//GEN-LAST:event_layoutRiwayatMousePressed

    private void layoutPengaturanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutPengaturanMousePressed
        setColor(layoutPengaturan);
        resetColor(layoutBeranda);
        resetColor(layoutPesanTiket);
        resetColor(layoutRiwayat);
        resetColor(layoutFeedback);
        resetColor(layoutKeluar);
        
        panelBeranda.setVisible(false);
        panelPesanTiket.setVisible(false);
        panelRiwayat.setVisible(false);
        panelPengaturan.setVisible(true);
        panelFeedback.setVisible(false);
        
        tampilPengaturan();
    }//GEN-LAST:event_layoutPengaturanMousePressed

    private void layoutFeedbackMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutFeedbackMousePressed
        setColor(layoutFeedback);
        resetColor(layoutBeranda);
        resetColor(layoutPesanTiket);
        resetColor(layoutRiwayat);
        resetColor(layoutPengaturan);
        resetColor(layoutKeluar);
        
        panelBeranda.setVisible(false);
        panelPesanTiket.setVisible(false);
        panelRiwayat.setVisible(false);
        panelPengaturan.setVisible(false);
        panelFeedback.setVisible(true);
        
        tampilFeedback();
    }//GEN-LAST:event_layoutFeedbackMousePressed

    private void layoutKeluarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_layoutKeluarMousePressed
        setColor(layoutKeluar);
        resetColor(layoutBeranda);
        resetColor(layoutPesanTiket);
        resetColor(layoutRiwayat);
        resetColor(layoutPengaturan);
        resetColor(layoutFeedback);
        
        int dialog = JOptionPane.showOptionDialog(this, "Apakah anda yakin ingin keluar?" , "Keluar", 
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        
        
        if (dialog == JOptionPane.OK_OPTION) {
            String sqlkode = "UPDATE `tblogin` SET `status`='false'"
                     + "WHERE username ='"+userLogin+"'";
                    try{
                        PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                        p2.executeUpdate();
                        p2.close();
                    }catch (SQLException ex){
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                    }
            dispose();
            SignIn login = new SignIn();
            login.setVisible(true);
        } else {
            JOptionPane.getRootFrame().dispose();
        }
        
    }//GEN-LAST:event_layoutKeluarMousePressed

    private void btnBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihActionPerformed
        clearScreen();
    }//GEN-LAST:event_btnBersihActionPerformed

    private void cbJenisTiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbJenisTiketActionPerformed
        if(cbJenisTiket.getSelectedItem().equals("Pilih Jenis Tiket")){
            cbLokasiWisata.removeAllItems();
            textFieldHrgTiket.setText("");
            textFieldTtlPembayaran.setText("");
            cbLokasiWisata.setEnabled(false);
        }
        else if(cbJenisTiket.getSelectedItem().equals("Wisata Religi")){
            cbLokasiWisata.removeAllItems();
            tampilWisata("Wisata Religi");
            tampilHarga("Wisata Religi");
            cbLokasiWisata.setEnabled(true);
            if(textFieldJmlhTiket.getText().equals("")){
                cbJenisTiket.setSelectedIndex(0);
                cbLokasiWisata.removeAllItems();
                textFieldHrgTiket.setText("");
                cbLokasiWisata.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Harap Jumlah Tiket diisi Terlebih dahulu");
            }else{
                int jmlTiket = Integer.parseInt(textFieldJmlhTiket.getText());
                int hrgTiket = Integer.parseInt(textFieldHrgTiket.getText());
                int totalBayar = jmlTiket * hrgTiket;
                textFieldTtlPembayaran.setText(String.valueOf(totalBayar));
            }           
        }
        else if(cbJenisTiket.getSelectedItem().equals("Wisata Alam")){
            cbLokasiWisata.removeAllItems();
            tampilWisata("Wisata Alam");
            tampilHarga("Wisata Alam");
            cbLokasiWisata.setEnabled(true);
            if(textFieldJmlhTiket.getText().equals("")){
                cbJenisTiket.setSelectedIndex(0);
                cbLokasiWisata.removeAllItems();
                textFieldHrgTiket.setText("");
                cbLokasiWisata.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Harap Jumlah Tiket diisi Terlebih dahulu");
            }else{
                int jmlTiket = Integer.parseInt(textFieldJmlhTiket.getText());
                int hrgTiket = Integer.parseInt(textFieldHrgTiket.getText());
                int totalBayar = jmlTiket * hrgTiket;
                textFieldTtlPembayaran.setText(String.valueOf(totalBayar));
            }             
        }
        else if(cbJenisTiket.getSelectedItem().equals("Wisata Pendidikan")){
            cbLokasiWisata.removeAllItems();
            tampilWisata("Wisata Pendidikan");
            tampilHarga("Wisata Pendidikan");
            cbLokasiWisata.setEnabled(true);
            if(textFieldJmlhTiket.getText().equals("")){
                cbJenisTiket.setSelectedIndex(0);
                cbLokasiWisata.removeAllItems();
                textFieldHrgTiket.setText("");
                cbLokasiWisata.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Harap Jumlah Tiket diisi Terlebih dahulu");
            }else{
                int jmlTiket = Integer.parseInt(textFieldJmlhTiket.getText());
                int hrgTiket = Integer.parseInt(textFieldHrgTiket.getText());
                int totalBayar = jmlTiket * hrgTiket;
                textFieldTtlPembayaran.setText(String.valueOf(totalBayar));
            } 
        }
    }//GEN-LAST:event_cbJenisTiketActionPerformed

    private void btnBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeliActionPerformed
           idTiket();
           Boolean isEmpyField = false; 
           String jmlTiket = textFieldJmlhTiket.getText();

           if (datePicker.getDate() == null) {
               isEmpyField = true;
               datePicker.requestFocus();
           } else if (jmlTiket.isEmpty()) {
               isEmpyField = true;
               textFieldJmlhTiket.requestFocus();
           } else if (cbPembayaran.getSelectedItem().equals("Pilih Jenis Pembayaran")) {
               isEmpyField = true;
               cbPembayaran.requestFocus();
           }
             
           Object[] opsi = {"Iya", "Tidak"};
              
           if (!isEmpyField) {
               int dialog = JOptionPane.showOptionDialog(this, "Tanggal penyewaan : " + DateFormat.getDateInstance().format(datePicker.getDate()) + "\n" 
                               + "Jumlah tiket : " + textFieldJmlhTiket.getText() + "\n" 
                                       + "Jenis wisata : " + cbJenisTiket.getSelectedItem() + "\n" 
                                               + "Lokasi wisata : " + cbLokasiWisata.getSelectedItem() + "\n" 
                                                       + "Pembayaran via : " + cbPembayaran.getSelectedItem() + "\n" 
                                                               + "Total pembayaran : " + textFieldTtlPembayaran.getText() + "\n\n" 
                                                                       + "Apakah data yang anda masukan sudah benar ?" + "\n\n",
                       "Rincian pesanan", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opsi, opsi[0]);
               
               if (dialog == JOptionPane.YES_OPTION) {
                    String datePattern = "YYYY-MM-dd";
                    SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
                   
                    JOptionPane.showMessageDialog(null, "Tiket berhasil dibuat");  
                    try{
                        st.executeUpdate("INSERT INTO tbtiket (`id_tiket`, `username`, `tanggal_tiket`, `jenis_tiket`, `lokasi_tiket`, `jumlah_tiket`, `jenis_pembayaran`, `total_harga`, `status_pembayaran`) VALUES ('" 
                                + idTiket() + "', " + "'" + userLogin + "', "
                                + "'" + dateFormatter.format(datePicker.getDate()) + "', "
                                + "'" + cbJenisTiket.getSelectedItem() + "', " + "'" + cbLokasiWisata.getSelectedItem() + "', " + "'" + textFieldJmlhTiket.getText() + "', "
                                + "'" + cbPembayaran.getSelectedItem() + "', " + "'" + textFieldTtlPembayaran.getText() + "', " + "'" + "Belum bayar" + "')");
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, "Terjadi Kesalahan pada " + e);
                    }
                    clearScreen();  
                    panelBeranda.setVisible(false);
                    panelPesanTiket.setVisible(false);
                    panelRiwayat.setVisible(true);
                    panelPengaturan.setVisible(false);
                    panelFeedback.setVisible(false);
                    cbLokasiWisata.setEnabled(false);
                    // mengeset color warna bahwa layout beranda di select
                    resetColor(layoutPesanTiket);
                    setColor(layoutRiwayat);
                    getDataRiwayat();
                } else {
                    JOptionPane.getRootFrame().dispose();
                } 
           } else {
               JOptionPane.showMessageDialog(null, "Inputan tidak boleh ada yang kosong");
           }
    }//GEN-LAST:event_btnBeliActionPerformed

    private void textFieldFullNamePengaturanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFullNamePengaturanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFullNamePengaturanActionPerformed

    private void textFieldNoTelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNoTelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNoTelpActionPerformed

    private void btnSimpanPengaturanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanPengaturanActionPerformed
        // TODO add your handling code here:
        Boolean isEmpyField = false; 
        String nama = textFieldFullNamePengaturan.getText();
        String telp = textFieldNoTelp.getText();
        Date tgl;
        tgl = datePickerTglLahir.getDate();

        if (nama.isEmpty()) {
            isEmpyField = true;
            textFieldFullNamePengaturan.requestFocus();
        } else if (datePickerTglLahir.getDate() == null && tgl == null) {
            isEmpyField = true;
            datePickerTglLahir.requestFocus();
        } else if (buttonGroup1.getSelection() == null) {
            isEmpyField = true;
        } else if (telp.isEmpty()) {
            isEmpyField = true;
            textFieldNoTelp.requestFocus();
        }

        if (!isEmpyField) {
            String tampil = "yyyy-MM-dd";
            SimpleDateFormat date = new SimpleDateFormat(tampil);
            String tanggal = String.valueOf(date.format(datePickerTglLahir.getDate()));
            String telpon = textFieldNoTelp.getText().toString();

            if (telpon.length() >= 11 && telpon.length() <=13) {
                if ("Simpan".equals(this.btnSimpanPengaturan.getText())){
                    if(rbLaki.isSelected()){
                        String sqlkode = "INSERT INTO `tbpengaturan`(`username`, `Nama_Lengkap`, `Tanggal_Lahir`, `Jenis_Kelamin`, `Nomor_Telepon`) "
                            + "values ('" + userLogin + "',"
                            + "'" + this.textFieldFullNamePengaturan.getText() + "',"
                            + "'" + tanggal + "',"
                            + "'" + rbLaki.getText() + "',"    
                            + "'" + this.textFieldNoTelp.getText() + "')";
                        try{
                            PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                            p2.executeUpdate();
                            p2.close();
                        }catch (SQLException ex){
                            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                        }
                    this.textFieldFullNamePengaturan.setEnabled(false);
                    this.datePickerTglLahir.setEnabled(false);
                    this.rbLaki.setEnabled(false);
                    this.rbPerempuan.setEnabled(false);
                    this.textFieldNoTelp.setEnabled(false);
                    this.btnEditPengaturan.setEnabled(true);
                    this.btnSimpanPengaturan.setEnabled(false);
                    } 
                    else if(rbPerempuan.isSelected()){
                        String sqlkode = "INSERT INTO `tbpengaturan`(`username`, `Nama_Lengkap`, `Tanggal_Lahir`, `Jenis_Kelamin`, `Nomor_Telepon`) "
                            + "values ('" + userLogin + "',"
                            + "'" + this.textFieldFullNamePengaturan.getText() + "',"
                            + "'" + tanggal + "',"
                            + "'" + rbPerempuan.getText() + "',"    
                            + "'" + this.textFieldNoTelp.getText() + "')";
                        try{
                            PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                            p2.executeUpdate();
                            p2.close();
                        }catch (SQLException ex){
                            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                        }
                    this.textFieldFullNamePengaturan.setEnabled(false);
                    this.datePickerTglLahir.setEnabled(false);
                    this.rbLaki.setEnabled(false);
                    this.rbPerempuan.setEnabled(false);
                    this.textFieldNoTelp.setEnabled(false);
                    this.btnEditPengaturan.setEnabled(true);
                    this.btnSimpanPengaturan.setEnabled(false);
                    }
                }
                else if ("Update".equals(this.btnSimpanPengaturan.getText())){
                    if(rbLaki.isSelected()){
                        String sqlkode = "UPDATE `tbpengaturan` SET `Nama_Lengkap`='" + this.textFieldFullNamePengaturan.getText() + "',"
                            + "`Tanggal_Lahir`='" + tanggal + "',"
                            + "`Jenis_Kelamin`='" + rbLaki.getText() +"',"
                            + "`Nomor_Telepon`='" + this.textFieldNoTelp.getText() + "' "
                            + "WHERE username ='" + userLogin + "'";
                        try{
                            PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                            p2.executeUpdate();
                            p2.close();
                        }catch (SQLException ex){
                            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                        }
                    this.textFieldFullNamePengaturan.setEnabled(false);
                    this.datePickerTglLahir.setEnabled(false);
                    this.rbLaki.setEnabled(false);
                    this.rbPerempuan.setEnabled(false);
                    this.textFieldNoTelp.setEnabled(false);
                    this.btnSimpanPengaturan.setText("Simpan");
                    this.btnEditPengaturan.setText("Edit");
                    this.btnEditPengaturan.setEnabled(true);
                    this.btnSimpanPengaturan.setEnabled(false);

                    } 
                    else if(rbPerempuan.isSelected()){
                        String sqlkode = "UPDATE `tbpengaturan` SET `Nama_Lengkap`='" + this.textFieldFullNamePengaturan.getText() + "',"
                            + "`Tanggal_Lahir`='" + tanggal + "',"
                            + "`Jenis_Kelamin`='" + rbPerempuan.getText() + "',"
                            + "`Nomor_Telepon`='" + this.textFieldNoTelp.getText() + "' "
                            + "WHERE username ='" + userLogin + "'";
                        try{
                            PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                            p2.executeUpdate();
                            p2.close();
                        }catch (SQLException ex){
                            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                        }
                    this.textFieldFullNamePengaturan.setEnabled(false);
                    this.datePickerTglLahir.setEnabled(false);
                    this.rbLaki.setEnabled(false);
                    this.rbPerempuan.setEnabled(false);
                    this.textFieldNoTelp.setEnabled(false);
                    this.btnSimpanPengaturan.setText("Simpan");
                    this.btnEditPengaturan.setText("Edit");
                    this.btnEditPengaturan.setEnabled(true);
                    this.btnSimpanPengaturan.setEnabled(false);
                    }
                } 
                JOptionPane.showMessageDialog(null, "Berhasil Disimpan");
            } else if (telpon.length() <= 11){
                JOptionPane.showMessageDialog(null, "Nomor Telepon harus lebih dari 11 digits");
            } else if (telpon.length() >= 13){
                JOptionPane.showMessageDialog(null, "Nomor Telepon harus kurang dari 13 digits");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Inputan tidak boleh ada yang kosong");
        }           
    }//GEN-LAST:event_btnSimpanPengaturanActionPerformed

    private void btnEditPengaturanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPengaturanActionPerformed
        // TODO add your handling code here:
        if("Edit".equals(this.btnEditPengaturan.getText())){
            this.textFieldFullNamePengaturan.setEnabled(true);
            this.datePickerTglLahir.setEnabled(true);
            this.rbLaki.setEnabled(true);
            this.rbPerempuan.setEnabled(true);
            this.textFieldNoTelp.setEnabled(true);
            this.btnSimpanPengaturan.setText("Update");
            this.btnEditPengaturan.setText("Cancel");
            this.btnEditPengaturan.setEnabled(true);
            this.btnSimpanPengaturan.setEnabled(true);
           
        }else if("Cancel".equals(this.btnEditPengaturan.getText())){
            this.textFieldFullNamePengaturan.setEnabled(false);
            this.datePickerTglLahir.setEnabled(false);
            this.rbLaki.setEnabled(false);
            this.rbPerempuan.setEnabled(false);
            this.textFieldNoTelp.setEnabled(false);
            this.btnSimpanPengaturan.setText("Simpan");
            this.btnEditPengaturan.setText("Edit");
            this.btnEditPengaturan.setEnabled(true);
            this.btnSimpanPengaturan.setEnabled(false);
            
            tampilPengaturan();
        }
    }//GEN-LAST:event_btnEditPengaturanActionPerformed

    private void textFieldFullNameFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFullNameFeedbackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFullNameFeedbackActionPerformed

    private void btnAddSaveFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSaveFeedbackActionPerformed
        // TODO add your handling code here:
            Boolean isEmpyField = false; 
            String nama = textFieldFullNameFeedback.getText();
            String kritik = textAreaKritikSaran.getText();
           
            if (nama.isEmpty()) {
                isEmpyField = true;
                textFieldFullNameFeedback.requestFocus();
            } else if (kritik.isEmpty()) {
                isEmpyField = true;
                textAreaKritikSaran.requestFocus();
            }

            if (!isEmpyField) {
                if ("Simpan".equals(this.btnAddSaveFeedback.getText())){
                    String sqlkode = "INSERT INTO `tbfeedback`(`username`, `Nama_Lengkap`, `Kritik_Saran`) "
                          + "values ('" + userLogin + "',"
                          + "'" + this.textFieldFullNameFeedback.getText() + "',"    
                          + "'" + this.textAreaKritikSaran.getText() + "')";
                    try{
                        PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                        p2.executeUpdate();
                        p2.close();
                    }catch (SQLException ex){
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                    }
                this.textFieldFullNameFeedback.setEnabled(false);
                this.textAreaKritikSaran.setEnabled(false);
                this.btnEditFeedback.setEnabled(true);
                this.btnHapusFeedback.setEnabled(true);
                this.btnAddSaveFeedback.setEnabled(false);
            }
            else if ("Update".equals(this.btnAddSaveFeedback.getText())){
                String sqlkode = "UPDATE `tbfeedback` SET `Nama_Lengkap`='" + this.textFieldFullNameFeedback.getText() + "',"
                        + "`Kritik_Saran`='" + this.textAreaKritikSaran.getText() + "' "
                        + "WHERE username ='" + userLogin + "'";
                    try{
                        PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                        p2.executeUpdate();
                        p2.close();
                    }catch (SQLException ex){
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                    }
                this.textFieldFullNameFeedback.setEnabled(false);
                this.textAreaKritikSaran.setEnabled(false);
                this.btnAddSaveFeedback.setText("Simpan");
                this.btnEditFeedback.setText("Edit");
                this.btnEditFeedback.setEnabled(true);
                this.btnHapusFeedback.setEnabled(true);
                this.btnAddSaveFeedback.setEnabled(false);
            }
                JOptionPane.showMessageDialog(null, "Berhasil Disimpan");
            } else {
                JOptionPane.showMessageDialog(null, "Inputan tidak boleh ada yang kosong");
            }
    }//GEN-LAST:event_btnAddSaveFeedbackActionPerformed

    private void btnEditFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditFeedbackActionPerformed
        // TODO add your handling code here:
        if("Edit".equals(this.btnEditFeedback.getText())){
            this.textFieldFullNameFeedback.setEnabled(true);
            this.textAreaKritikSaran.setEnabled(true);
            this.btnAddSaveFeedback.setText("Update");
            this.btnEditFeedback.setText("Cancel");
            this.btnEditFeedback.setEnabled(true);
            this.btnHapusFeedback.setEnabled(false);
            this.btnAddSaveFeedback.setEnabled(true);
           
        }else if("Cancel".equals(this.btnEditFeedback.getText())){
            this.textFieldFullNameFeedback.setEnabled(false);
            this.textAreaKritikSaran.setEnabled(false);
            this.btnAddSaveFeedback.setText("Simpan");
            this.btnEditFeedback.setText("Edit");
            this.btnEditFeedback.setEnabled(true);
            this.btnHapusFeedback.setEnabled(true);
            this.btnAddSaveFeedback.setEnabled(false);
            
            tampilFeedback();
        }
    }//GEN-LAST:event_btnEditFeedbackActionPerformed

    private void btnHapusFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusFeedbackActionPerformed
        // TODO add your handling code here:
            String sqlkode = "DELETE FROM `tbfeedback` " 
                        + "WHERE username ='" + userLogin + "'";
                    try{
                        PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                        p2.executeUpdate();
                        p2.close();
                    }catch (SQLException ex){
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
                    }
            
            this.textFieldFullNameFeedback.setText("");
            this.textAreaKritikSaran.setText("");
            this.textFieldFullNameFeedback.setEnabled(true);
            this.textAreaKritikSaran.setEnabled(true);
            this.btnEditFeedback.setEnabled(false);
            this.btnHapusFeedback.setEnabled(false);
            this.btnAddSaveFeedback.setEnabled(true);
            
            JOptionPane.showMessageDialog(null, "Berhasil Dihapus");
        
    }//GEN-LAST:event_btnHapusFeedbackActionPerformed

    private void textFieldNoTelpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldNoTelpKeyTyped
        char a = evt.getKeyChar();
        
        if (!Character.isDigit(a))
            evt.consume();
    }//GEN-LAST:event_textFieldNoTelpKeyTyped

    private void textFieldJmlhTiketKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldJmlhTiketKeyTyped
        char a = evt.getKeyChar();
        
        if (!Character.isDigit(a))
            evt.consume();
    }//GEN-LAST:event_textFieldJmlhTiketKeyTyped

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed

        int dialog = JOptionPane.showOptionDialog(this, "Apakah Anda yakin untuk melakukan pembayaran?" , "Bayar", 
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        
        
        if (dialog == JOptionPane.OK_OPTION) {
             String sqlkode = "UPDATE `tbtiket` SET `status_pembayaran`='" + "Sudah bayar" + "'"
                        + " WHERE id_tiket ='" + kode + "' " + "AND " + "username = '" + userLogin + "'";
            try{
                PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                p2.executeUpdate();
                p2.close();
            }catch (SQLException ex){
                JOptionPane.showMessageDialog(this, "Terjadi Kesalahan " + ex.getMessage());
            }
        } else {
            JOptionPane.getRootFrame().dispose();
        }
                    
        getDataRiwayat();
    }//GEN-LAST:event_btnBayarActionPerformed

    private void tabelHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelHistoryMouseClicked
        this.ambiltiketKlik();
    }//GEN-LAST:event_tabelHistoryMouseClicked

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        String sqlkode = "DELETE FROM `tbtiket` " 
                    + "WHERE id_tiket ='" + kode + "' " + "AND" + " username = '" + userLogin + "'";
                try{
                    PreparedStatement p2 = (PreparedStatement) con.prepareStatement(sqlkode);
                    p2.executeUpdate();
                    p2.close();
                }catch (SQLException ex){
                    JOptionPane.showMessageDialog(this, "Terjadi Kesalahan" + ex.getMessage());
                }
            
        getDataRiwayat();
        JOptionPane.showMessageDialog(null, "Berhasil Dihapus");
    }//GEN-LAST:event_btnHapusActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundLayout;
    private javax.swing.JPanel bgWhiteFeedback;
    private javax.swing.JPanel bgWhiteKeluar;
    private javax.swing.JPanel bgWhitePengaturan;
    private javax.swing.JButton btnAddSaveFeedback;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnBeli;
    private javax.swing.JButton btnBersih;
    private javax.swing.JButton btnEditFeedback;
    private javax.swing.JButton btnEditPengaturan;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHapusFeedback;
    private javax.swing.JButton btnSimpanPengaturan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbJenisTiket;
    private javax.swing.JComboBox<String> cbLokasiWisata;
    private javax.swing.JComboBox<String> cbPembayaran;
    private javax.swing.JPanel contentLayout;
    private com.toedter.calendar.JDateChooser datePicker;
    private com.toedter.calendar.JDateChooser datePickerTglLahir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDesc;
    private javax.swing.JLabel labelFeedback;
    private javax.swing.JLabel labelFullNameFeedback;
    private javax.swing.JLabel labelFullNamePengaturan;
    private javax.swing.JLabel labelGreeting;
    private javax.swing.JLabel labelHistory;
    private javax.swing.JLabel labelHrgTiket;
    private javax.swing.JLabel labelJenisKelamin;
    private javax.swing.JLabel labelJenisTiket;
    private javax.swing.JLabel labelJmlhTIket;
    private javax.swing.JLabel labelKritikSaran;
    private javax.swing.JLabel labelLokasiWisata;
    private javax.swing.JLabel labelNoTelp;
    private javax.swing.JLabel labelPembayaran;
    private javax.swing.JLabel labelPengaturan;
    private javax.swing.JLabel labelTglLahir;
    private javax.swing.JLabel labelTglPenyewaan;
    private javax.swing.JLabel labelTtlPembayaran;
    private javax.swing.JLabel labelWelcome;
    private javax.swing.JPanel layoutBeranda;
    private javax.swing.JPanel layoutFeedback;
    private javax.swing.JPanel layoutKeluar;
    private javax.swing.JPanel layoutPengaturan;
    private javax.swing.JPanel layoutPesanTiket;
    private javax.swing.JPanel layoutRiwayat;
    private javax.swing.JPanel leftBgWhiteBeranda;
    private javax.swing.JPanel leftBgWhitePesanTiket;
    private javax.swing.JPanel leftBgWhiteRiwayat;
    private javax.swing.JPanel leftLayout;
    private javax.swing.JPanel panelBeranda;
    private javax.swing.JPanel panelFeedback;
    private javax.swing.JPanel panelPengaturan;
    private javax.swing.JPanel panelPesanTiket;
    private javax.swing.JPanel panelRiwayat;
    private javax.swing.JRadioButton rbLaki;
    private javax.swing.JRadioButton rbPerempuan;
    private javax.swing.JLabel subTitle;
    private javax.swing.JTable tabelHistory;
    private javax.swing.JTextArea textAreaKritikSaran;
    private javax.swing.JTextField textFieldFullNameFeedback;
    private javax.swing.JTextField textFieldFullNamePengaturan;
    private javax.swing.JTextField textFieldHrgTiket;
    private javax.swing.JTextField textFieldJmlhTiket;
    private javax.swing.JTextField textFieldNoTelp;
    private javax.swing.JTextField textFieldTtlPembayaran;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel titleBeranda;
    private javax.swing.JLabel titleFeedback;
    private javax.swing.JLabel titleKeluar;
    private javax.swing.JLabel titlePengaturan;
    private javax.swing.JLabel titlePesanTiket;
    private javax.swing.JLabel titleRiwayat;
    // End of variables declaration//GEN-END:variables

   
}
